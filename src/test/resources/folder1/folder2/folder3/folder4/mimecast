Developer Test for Mimecast
10/06/2019

Write a simple Java service that scans all file for its contents in a given folder and its
subfolders for a plain text search term, and returns the list of matching files, their number of
matches and the server they reside.
The frontend to accept the parameters and output the results can be written with your
preferred JS framework (Angular, React.js, Vue.js, etc). Do not use C# Asp.Net for the
frontend.
Service Requirements:
1. The service has to expose 2 endpoints
 One to get a list of servers
 One to perform the search on a given folder on the selected servers.
2. GetServers endpoint should return a list of available servers where to perform the
search in.
 This can be a hardcoded list of names for testing purposes.
 One of them should be “localhost”, so the search can be performed on the
same server executing the endpoint for testing purposes.

3. Search endpoint should accept the search parameters and return a list of results in
real time:
 Input parameters: The patch of the folder to scan.
 Input parameters: The search term to match.
 The result should be a list of matches returned as soon as they are found. Do
not wait to get all the results to send them back to the frontend. The search
should continue and all results should be returned eventually.

4. The service should be optimized for speed. Make use of multiple threads for
enumerating the files and subfolders and scanning the file contents. Please avoid
using Directory.GetDirectories and Directory.GetFiles as these methods only return
when all the items are enumerated (which causes unnecessary delay) and they
return the results in a single array (which may cause OutOfMemoryException
depending on the number of files under the folder being scanned)
5. The service should be able to handle large amounts of data. Make sure the program
can handle large files (larger than the amount of memory available to your program),
lots of files (more than what you can fit into a single array), and a deep folder
hierarchy. Please don’t expect the result list to fit in memory either.

www.mimecast.com
©2014 Mimecast. All rights reserved.
2
6. The service should be resilient to file system exceptions. Make sure the program
scans what it can and ignores any files and/or folders it cannot access.

Frontend Requirements:
1. Welcome page
 It should present a list of servers (returned by the backend) where to perform
the search. Note that the search can be performed in multiple servers
simultaneously.
 It should have fields to introduce the search path and the search term.
2. Results page
 Results should appear as soon as they are returned by the backend.
 The user should be aware of the search status (in progress / finished).

Notes:
Please submit the source code for your program and any other relevant files (e.g. .csproj,
.sln, etc.) in a password-protected zip file (password = ‘mimecast’). Please don’t include any
executables (.exe, .dll) in the zip file.
3 rd party libraries may be used.